name: Lint & Test

on:
  push: 
  pull_request:
    types: [opened, synchronize, reopened]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: nix develop --command bash {0}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install nix
        uses: nixbuild/nix-quick-install-action@v26
        with:
          nix_conf: |
            keep-outputs = true

      - name: Restore and cache Nix store
        uses: nix-community/cache-nix-action@823d0bb8ea9ae066ae0583255e97b221397de509
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1073741824
          purge: true
          purge-prefixes: cache-${{ matrix.os }}-
          purge-created: 0
          purge-primary-key: never

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Set token config
        run: |
          echo "//npm.wunderwerk.dev/:_authToken=${NPM_TOKEN}" >> .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

      - name: Typecheck
        run: pnpm typecheck
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

      - name: Syncpack
        run: pnpm syncpack
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

      - name: Build
        run: pnpm build
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

      - name: Test
        run: pnpm test
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

      - name: Check format
        run: pnpm format:check
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
